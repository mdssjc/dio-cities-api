plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'pmd'
	id 'com.github.spotbugs' version '4.7.2'
	id 'name.remal.sonarlint' version '1.4.1'
	id 'jacoco'
	id 'info.solidsoft.pitest' version '1.6.0'
	id 'org.sonarqube' version '3.3'
	id 'org.unbroken-dome.test-sets' version '4.0.0'
}

group = 'one.digitalinnovation.citiesapi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

testSets {
	qaTest
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.vladmihalcea:hibernate-types-52:2.12.1'
	implementation 'org.postgresql:postgresql'
	// runtimeOnly 'org.postgresql:postgresql' need compile time PGpoint.class
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-ui:1.5.10'
	implementation 'org.pitest:pitest-junit5-plugin:0.14'
	qaTestImplementation 'com.intuit.karate:karate-junit5:1.1.0'
	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

tasks.withType(Test) {
	useJUnitPlatform()
}

sourceSets {
	qaTest {
		resources {
			srcDir file('src/qaTest/java')
			exclude '**/*.java'
		}
	}
}

checkstyle {
	sourceSets = [sourceSets.main]
	toolVersion '8.31'
	configFile file('google_checks.xml')
}

pmd {
	sourceSets = [sourceSets.main]
	consoleOutput = true
	toolVersion = '6.21.0'
	rulePriority = 5
	//ruleSetFiles = files('pmd-ruleset.xml')
	ruleSets = ['category/java/errorprone.xml', 'category/java/bestpractices.xml']
}

spotbugsMain {
	reportLevel = 'high'
	reports {
		html {
			enabled = true
			destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

sonarlint {
	excludes {
		source '**/*.feature'
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		xml.enabled true
	}
}

pitest {
	testPlugin = 'junit5'
	junit5PluginVersion = '0.14'
}

sonarqube {
	properties {
		property 'sonar.host.url', 'http://localhost:9000'
		property 'sonar.login', '<token>'
	}
}
