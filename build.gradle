plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'pmd'
	id 'com.github.spotbugs' version '4.7.2'
	id 'name.remal.sonarlint' version '1.4.1'
	id 'jacoco'
	id 'info.solidsoft.pitest' version '1.5.1'
	id 'org.sonarqube' version '3.3'
}

group = 'one.digitalinnovation.citiesapi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.vladmihalcea:hibernate-types-52:2.12.1'
	implementation 'org.postgresql:postgresql'
	// runtimeOnly 'org.postgresql:postgresql' need compile time PGpoint.class
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-ui:1.5.10'

	testImplementation 'com.intuit.karate:karate-junit5:1.1.0'

	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

checkstyle {
	toolVersion '8.31'
	configFile file('google_checks.xml')
}

pmd {
	consoleOutput = true
	toolVersion = '6.21.0'
	rulePriority = 5
	//ruleSetFiles = files('pmd-ruleset.xml')
	ruleSets = ['category/java/bestpractices.xml']
}

spotbugsMain {
	reportLevel = 'high'
	reports {
		html {
			enabled = true
			destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}
spotbugsTest {
	reports {
		html {
			enabled = true
			destination = file("$buildDir/reports/spotbugs/test/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

jacocoTestReport {
	dependsOn test
}

pitest {
	junit5PluginVersion = '0.12'
}
